{"version":3,"sources":["webpack/bootstrap 61bd7d9ab0692a9dac08","./js/main.js","./js/view.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;;AAEA;AACA;AACA;AACA;AACA,EAAC;;;;;;;ACND;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,yBAAwB,YAAY;AACpC;AACA;AACA;AACA,QAAO;AACP;;AAEA,2BAA0B,YAAY;AACtC;AACA;;AAEA;AACA;AACA;;AAEA,4BAA2B,gBAAgB;;AAE3C,yBAAwB,YAAY;AACpC;AACA;AACA;AACA,QAAO;;AAEP;AACA;;AAEA;AACA;AACA;;;AAGA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/js/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 61bd7d9ab0692a9dac08\n **/","const View = require('./view.js');\n\n$( () => {\n  const rootEl = $('.kt');\n  // new View(game, rootEl);\n  new View(rootEl);\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/main.js\n ** module id = 0\n ** module chunks = 0\n **/","class View {\n  // constructor(game, $el) {\n  constructor($el) {\n    // this.game = game;\n    this.$el = $el;\n\n    this.setupBoard();\n  }\n\n  setupBoard() {\n    const letters = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'];\n    const $ul = $(\"<ul>\");\n    $ul.addClass(\"group\");\n\n    for (let rowIdx = 0; rowIdx < 8; rowIdx++) {\n      let $rowNum = $('<span>', {\n        class: 'row-number',\n        text: 8 - rowIdx\n      });\n      $ul.append($rowNum);\n\n      for (let colidx = 0; colidx < 8; colidx++) {\n        let $li = $(\"<li>\");\n        $li.data(\"pos\", [rowIdx, colidx]);\n\n        $ul.append($li);\n      }\n    }\n\n    $ul.append($('<div>', {id: 'bl-spacer'}));\n\n    for (let colIdx = 0; colIdx < 8; colIdx++) {\n      let $colLet = $('<span>', {\n        class: 'col-letter',\n        text: letters[colIdx]\n      });\n\n      $ul.append($colLet);\n    }\n\n    this.$el.append($ul);\n  }\n}\n\n\nmodule.exports = View;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/view.js\n ** module id = 1\n ** module chunks = 0\n **/"],"sourceRoot":""}